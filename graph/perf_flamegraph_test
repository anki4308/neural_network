<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="390.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="373" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="373" > </text>
<g id="frames">
<g >
<title>unmap_vmas (1,641,328 samples, 5.27%)</title><rect x="937.4" y="165" width="62.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="940.40" y="175.5" >unmap_..</text>
</g>
<g >
<title>__mod_lruvec_state (1,854,887 samples, 5.96%)</title><rect x="867.1" y="53" width="70.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="870.07" y="63.5" >__mod_l..</text>
</g>
<g >
<title>free_p4d_range (1,854,887 samples, 5.96%)</title><rect x="867.1" y="133" width="70.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="870.07" y="143.5" >free_p4..</text>
</g>
<g >
<title>mmap_region (1,148,809 samples, 3.69%)</title><rect x="502.0" y="69" width="43.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="505.00" y="79.5" >mmap..</text>
</g>
<g >
<title>update_load_avg (1,119,555 samples, 3.60%)</title><rect x="652.7" y="149" width="42.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="655.68" y="159.5" >upd..</text>
</g>
<g >
<title>do_exit (3,496,215 samples, 11.23%)</title><rect x="867.1" y="245" width="132.5" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="870.07" y="255.5" >do_exit</text>
</g>
<g >
<title>free_pud_range (1,854,887 samples, 5.96%)</title><rect x="867.1" y="117" width="70.3" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="870.07" y="127.5" >free_pu..</text>
</g>
<g >
<title>mmput (3,496,215 samples, 11.23%)</title><rect x="867.1" y="213" width="132.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="870.07" y="223.5" >mmput</text>
</g>
<g >
<title>exit_to_user_mode_prepare (617,327 samples, 1.98%)</title><rect x="843.7" y="245" width="23.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="846.67" y="255.5" >e..</text>
</g>
<g >
<title>do_syscall_64 (3,777,759 samples, 12.14%)</title><rect x="551.9" y="277" width="143.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="554.90" y="287.5" >do_syscall_64</text>
</g>
<g >
<title>ksys_write (6,696,424 samples, 21.52%)</title><rect x="190.2" y="229" width="253.9" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="193.19" y="239.5" >ksys_write</text>
</g>
<g >
<title>__free_pages (1,971,152 samples, 6.33%)</title><rect x="760.8" y="181" width="74.7" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="763.77" y="191.5" >__free_p..</text>
</g>
<g >
<title>__rseq_handle_notify_resume (617,327 samples, 1.98%)</title><rect x="843.7" y="213" width="23.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="846.67" y="223.5" >_..</text>
</g>
<g >
<title>exec_binprm (1,316,123 samples, 4.23%)</title><rect x="502.0" y="197" width="49.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="505.00" y="207.5" >exec_..</text>
</g>
<g >
<title>do_syscall_64 (6,696,424 samples, 21.52%)</title><rect x="190.2" y="261" width="253.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="193.19" y="271.5" >do_syscall_64</text>
</g>
<g >
<title>ext4_da_write_end (1,609,136 samples, 5.17%)</title><rect x="383.1" y="149" width="61.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="386.07" y="159.5" >ext4_d..</text>
</g>
<g >
<title>srunner_run_tagged (1,580,339 samples, 5.08%)</title><rect x="1073.6" y="309" width="60.0" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1076.65" y="319.5" >srunne..</text>
</g>
<g >
<title>__fsnotify_parent (3,133,424 samples, 10.07%)</title><rect x="264.3" y="197" width="118.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="267.27" y="207.5" >__fsnotify_par..</text>
</g>
<g >
<title>ext4_mark_iloc_dirty (1,609,136 samples, 5.17%)</title><rect x="383.1" y="69" width="61.0" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="386.07" y="79.5" >ext4_m..</text>
</g>
<g >
<title>generic_perform_write (1,609,136 samples, 5.17%)</title><rect x="383.1" y="165" width="61.0" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="386.07" y="175.5" >generi..</text>
</g>
<g >
<title>ext4_find_dest_de (1,517,640 samples, 4.88%)</title><rect x="132.7" y="69" width="57.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="135.66" y="79.5" >ext4_f..</text>
</g>
<g >
<title>do_syscall_64 (1,488,634 samples, 4.78%)</title><rect x="1133.6" y="277" width="56.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1136.56" y="287.5" >do_sy..</text>
</g>
<g >
<title>add_dirent_to_buf (1,517,640 samples, 4.88%)</title><rect x="132.7" y="85" width="57.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="135.66" y="95.5" >add_di..</text>
</g>
<g >
<title>__expf_fma (1,580,339 samples, 5.08%)</title><rect x="1073.6" y="261" width="60.0" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1076.65" y="271.5" >__expf..</text>
</g>
<g >
<title>search_binary_handler (15,138 samples, 0.05%)</title><rect x="10.0" y="181" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>load_elf_binary (1,316,123 samples, 4.23%)</title><rect x="502.0" y="165" width="49.9" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="505.00" y="175.5" >load_..</text>
</g>
<g >
<title>load_elf_binary (15,138 samples, 0.05%)</title><rect x="10.0" y="165" width="0.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,371,872 samples, 4.41%)</title><rect x="695.1" y="245" width="52.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="698.12" y="255.5" >asm_e..</text>
</g>
<g >
<title>__mmdrop (1,971,152 samples, 6.33%)</title><rect x="760.8" y="229" width="74.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="763.77" y="239.5" >__mmdrop</text>
</g>
<g >
<title>wp_page_copy (669,829 samples, 2.15%)</title><rect x="708.3" y="133" width="25.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="711.33" y="143.5" >w..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,488,634 samples, 4.78%)</title><rect x="1133.6" y="293" width="56.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1136.56" y="303.5" >entry..</text>
</g>
<g >
<title>__ext4_mark_inode_dirty (1,609,136 samples, 5.17%)</title><rect x="383.1" y="85" width="61.0" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="386.07" y="95.5" >__ext4..</text>
</g>
<g >
<title>free_pcppages_bulk (1,971,152 samples, 6.33%)</title><rect x="760.8" y="133" width="74.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="763.77" y="143.5" >free_pcp..</text>
</g>
<g >
<title>kmem_cache_alloc (1,488,634 samples, 4.78%)</title><rect x="1133.6" y="229" width="56.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1136.56" y="239.5" >kmem_..</text>
</g>
<g >
<title>do_sys_openat2 (3,172,964 samples, 10.19%)</title><rect x="69.9" y="229" width="120.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="72.90" y="239.5" >do_sys_openat2</text>
</g>
<g >
<title>inotify_handle_inode_event (1,613,966 samples, 5.19%)</title><rect x="321.9" y="133" width="61.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="324.88" y="143.5" >inotif..</text>
</g>
<g >
<title>unmap_single_vma (1,641,328 samples, 5.27%)</title><rect x="937.4" y="149" width="62.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="940.40" y="159.5" >unmap_..</text>
</g>
<g >
<title>__x64_sys_write (6,696,424 samples, 21.52%)</title><rect x="190.2" y="245" width="253.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="193.19" y="255.5" >__x64_sys_write</text>
</g>
<g >
<title>__mod_lruvec_page_state (355,026 samples, 1.14%)</title><rect x="720.3" y="101" width="13.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="723.27" y="111.5" ></text>
</g>
<g >
<title>wake_up_new_task (1,119,555 samples, 3.60%)</title><rect x="652.7" y="213" width="42.4" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="655.68" y="223.5" >wak..</text>
</g>
<g >
<title>mas_update_gap.part.0 (1,262,724 samples, 4.06%)</title><rect x="551.9" y="117" width="47.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="554.90" y="127.5" >mas_..</text>
</g>
<g >
<title>error_return (359,705 samples, 1.16%)</title><rect x="747.1" y="261" width="13.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="750.13" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1,316,123 samples, 4.23%)</title><rect x="502.0" y="261" width="49.9" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="505.00" y="271.5" >__x64..</text>
</g>
<g >
<title>ext4_create (1,517,640 samples, 4.88%)</title><rect x="132.7" y="149" width="57.5" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="135.66" y="159.5" >ext4_c..</text>
</g>
<g >
<title>ret_from_fork_asm (4,535,395 samples, 14.57%)</title><rect x="695.1" y="293" width="172.0" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="698.12" y="303.5" >ret_from_fork_asm</text>
</g>
<g >
<title>vm_mmap (1,148,809 samples, 3.69%)</title><rect x="502.0" y="117" width="43.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="505.00" y="127.5" >vm_m..</text>
</g>
<g >
<title>x86_pmu_enable (215,339 samples, 0.69%)</title><rect x="835.5" y="197" width="8.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="838.50" y="207.5" ></text>
</g>
<g >
<title>feed_forward (1,580,339 samples, 5.08%)</title><rect x="1073.6" y="277" width="60.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1076.65" y="287.5" >feed_f..</text>
</g>
<g >
<title>dup_mm.constprop.0 (2,658,204 samples, 8.54%)</title><rect x="551.9" y="197" width="100.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="554.90" y="207.5" >dup_mm.const..</text>
</g>
<g >
<title>mas_wr_modify (2,658,204 samples, 8.54%)</title><rect x="551.9" y="133" width="100.8" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="554.90" y="143.5" >mas_wr_modify</text>
</g>
<g >
<title>mod_lruvec_page_state.constprop.0 (1,854,887 samples, 5.96%)</title><rect x="867.1" y="85" width="70.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="870.07" y="95.5" >mod_lru..</text>
</g>
<g >
<title>perf_event_exec (15,138 samples, 0.05%)</title><rect x="10.0" y="133" width="0.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>handle_pte_fault (1,018,348 samples, 3.27%)</title><rect x="695.1" y="165" width="38.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="698.12" y="175.5" >han..</text>
</g>
<g >
<title>handle_mm_fault (1,018,348 samples, 3.27%)</title><rect x="695.1" y="197" width="38.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="698.12" y="207.5" >han..</text>
</g>
<g >
<title>all (31,124,011 samples, 100%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1,854,887 samples, 5.96%)</title><rect x="867.1" y="37" width="70.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="870.07" y="47.5" >__mod_m..</text>
</g>
<g >
<title>enqueue_task_fair (1,119,555 samples, 3.60%)</title><rect x="652.7" y="181" width="42.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="655.68" y="191.5" >enq..</text>
</g>
<g >
<title>bprm_execve.part.0 (1,316,123 samples, 4.23%)</title><rect x="502.0" y="213" width="49.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="505.00" y="223.5" >bprm_..</text>
</g>
<g >
<title>fsnotify (3,133,424 samples, 10.07%)</title><rect x="264.3" y="181" width="118.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="267.27" y="191.5" >fsnotify</text>
</g>
<g >
<title>__ext4_check_dir_entry (1,517,640 samples, 4.88%)</title><rect x="132.7" y="53" width="57.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="135.66" y="63.5" >__ext4..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (15,138 samples, 0.05%)</title><rect x="10.0" y="245" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>mnt_want_write (1,655,324 samples, 5.32%)</title><rect x="69.9" y="181" width="62.8" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="72.90" y="191.5" >mnt_wa..</text>
</g>
<g >
<title>[unknown] (15,138 samples, 0.05%)</title><rect x="10.0" y="309" width="0.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,696,424 samples, 21.52%)</title><rect x="190.2" y="277" width="253.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="193.19" y="287.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>native_write_msr (62,773 samples, 0.20%)</title><rect x="841.3" y="165" width="2.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="844.29" y="175.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,580,339 samples, 5.08%)</title><rect x="1073.6" y="213" width="60.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1076.65" y="223.5" >do_use..</text>
</g>
<g >
<title>__kmem_cache_alloc_node (1,613,966 samples, 5.19%)</title><rect x="321.9" y="101" width="61.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="324.88" y="111.5" >__kmem..</text>
</g>
<g >
<title>vma_interval_tree_insert (1,148,809 samples, 3.69%)</title><rect x="502.0" y="53" width="43.6" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="505.00" y="63.5" >vma_..</text>
</g>
<g >
<title>bprm_execve (1,316,123 samples, 4.23%)</title><rect x="502.0" y="229" width="49.9" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="505.00" y="239.5" >bprm_..</text>
</g>
<g >
<title>x86_pmu_enable (15,138 samples, 0.05%)</title><rect x="10.0" y="69" width="0.6" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="13.00" y="79.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1,613,966 samples, 5.19%)</title><rect x="321.9" y="85" width="61.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="324.88" y="95.5" >__rcu_..</text>
</g>
<g >
<title>send_to_group (3,133,424 samples, 10.07%)</title><rect x="264.3" y="165" width="118.8" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="267.27" y="175.5" >send_to_group</text>
</g>
<g >
<title>__mod_lruvec_state (355,026 samples, 1.14%)</title><rect x="720.3" y="85" width="13.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="723.27" y="95.5" ></text>
</g>
<g >
<title>ext4_dx_add_entry (1,517,640 samples, 4.88%)</title><rect x="132.7" y="101" width="57.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="135.66" y="111.5" >ext4_d..</text>
</g>
<g >
<title>exit_mm (3,496,215 samples, 11.23%)</title><rect x="867.1" y="229" width="132.5" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="870.07" y="239.5" >exit_mm</text>
</g>
<g >
<title>__pte_offset_map (314,803 samples, 1.01%)</title><rect x="708.3" y="117" width="12.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="711.33" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (15,138 samples, 0.05%)</title><rect x="10.0" y="293" width="0.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>elf_map (1,148,809 samples, 3.69%)</title><rect x="502.0" y="133" width="43.6" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="505.00" y="143.5" >elf_..</text>
</g>
<g >
<title>vm_mmap_pgoff (1,148,809 samples, 3.69%)</title><rect x="502.0" y="101" width="43.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="505.00" y="111.5" >vm_m..</text>
</g>
<g >
<title>free_unref_page_commit (1,971,152 samples, 6.33%)</title><rect x="760.8" y="149" width="74.7" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="763.77" y="159.5" >free_unr..</text>
</g>
<g >
<title>[unknown] (1,564,725 samples, 5.03%)</title><rect x="10.6" y="293" width="59.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.57" y="303.5" >[unkno..</text>
</g>
<g >
<title>intel_pmu_enable_all (62,773 samples, 0.20%)</title><rect x="841.3" y="181" width="2.4" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="844.29" y="191.5" ></text>
</g>
<g >
<title>mas_store (2,658,204 samples, 8.54%)</title><rect x="551.9" y="165" width="100.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="554.90" y="175.5" >mas_store</text>
</g>
<g >
<title>ext4_dirty_inode (1,609,136 samples, 5.17%)</title><rect x="383.1" y="101" width="61.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="386.07" y="111.5" >ext4_d..</text>
</g>
<g >
<title>enqueue_entity (1,119,555 samples, 3.60%)</title><rect x="652.7" y="165" width="42.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="655.68" y="175.5" >enq..</text>
</g>
<g >
<title>ctx_resched (15,138 samples, 0.05%)</title><rect x="10.0" y="101" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (2,186,491 samples, 7.03%)</title><rect x="760.8" y="245" width="82.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="763.77" y="255.5" >finish_ta..</text>
</g>
<g >
<title>perf_ctx_enable (15,138 samples, 0.05%)</title><rect x="10.0" y="85" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (3,496,215 samples, 11.23%)</title><rect x="867.1" y="277" width="132.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="870.07" y="287.5" >__x64_sys_exit_g..</text>
</g>
<g >
<title>intel_pmu_enable_all (15,138 samples, 0.05%)</title><rect x="10.0" y="53" width="0.6" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="13.00" y="63.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,496,215 samples, 11.23%)</title><rect x="867.1" y="293" width="132.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="870.07" y="303.5" >do_syscall_64</text>
</g>
<g >
<title>schedule_tail (2,186,491 samples, 7.03%)</title><rect x="760.8" y="261" width="82.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="763.77" y="271.5" >schedule_..</text>
</g>
<g >
<title>do_syscall_64 (15,138 samples, 0.05%)</title><rect x="10.0" y="277" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>mas_leaf_max_gap (1,262,724 samples, 4.06%)</title><rect x="551.9" y="101" width="47.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="554.90" y="111.5" >mas_..</text>
</g>
<g >
<title>__do_sys_clone (3,777,759 samples, 12.14%)</title><rect x="551.9" y="245" width="143.2" height="15.0" fill="rgb(211,27,6)" rx="2" ry="2" />
<text  x="554.90" y="255.5" >__do_sys_clone</text>
</g>
<g >
<title>ret_from_fork (4,535,395 samples, 14.57%)</title><rect x="695.1" y="277" width="172.0" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="698.12" y="287.5" >ret_from_fork</text>
</g>
<g >
<title>bprm_execve.part.0 (15,138 samples, 0.05%)</title><rect x="10.0" y="213" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>fsnotify_handle_inode_event.isra.0 (1,613,966 samples, 5.19%)</title><rect x="321.9" y="149" width="61.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="324.88" y="159.5" >fsnoti..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,316,123 samples, 4.23%)</title><rect x="502.0" y="293" width="49.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="505.00" y="303.5" >entry..</text>
</g>
<g >
<title>get_random_u64 (167,314 samples, 0.54%)</title><rect x="545.6" y="133" width="6.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="548.55" y="143.5" ></text>
</g>
<g >
<title>free_pgtables (1,854,887 samples, 5.96%)</title><rect x="867.1" y="165" width="70.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="870.07" y="175.5" >free_pg..</text>
</g>
<g >
<title>__GI___libc_open (3,172,964 samples, 10.19%)</title><rect x="69.9" y="293" width="120.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="72.90" y="303.5" >__GI___libc_open</text>
</g>
<g >
<title>__x64_sys_execve (15,138 samples, 0.05%)</title><rect x="10.0" y="261" width="0.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>ext4_fill_raw_inode (1,609,136 samples, 5.17%)</title><rect x="383.1" y="37" width="61.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="386.07" y="47.5" >ext4_f..</text>
</g>
<g >
<title>__perf_event_task_sched_in (215,339 samples, 0.69%)</title><rect x="835.5" y="229" width="8.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="838.50" y="239.5" ></text>
</g>
<g >
<title>mas_pop_node (1,395,480 samples, 4.48%)</title><rect x="599.8" y="85" width="52.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="602.77" y="95.5" >mas_p..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,777,759 samples, 12.14%)</title><rect x="551.9" y="293" width="143.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="554.90" y="303.5" >entry_SYSCALL_64_a..</text>
</g>
<g >
<title>setup_new_exec (167,314 samples, 0.54%)</title><rect x="545.6" y="149" width="6.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="548.55" y="159.5" ></text>
</g>
<g >
<title>__put_user_4 (1,371,872 samples, 4.41%)</title><rect x="695.1" y="261" width="52.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="698.12" y="271.5" >__put..</text>
</g>
<g >
<title>do_group_exit (3,496,215 samples, 11.23%)</title><rect x="867.1" y="261" width="132.5" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="870.07" y="271.5" >do_group_exit</text>
</g>
<g >
<title>unmap_page_range (1,641,328 samples, 5.27%)</title><rect x="937.4" y="133" width="62.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="940.40" y="143.5" >unmap_..</text>
</g>
<g >
<title>do_syscall_64 (3,172,964 samples, 10.19%)</title><rect x="69.9" y="261" width="120.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="72.90" y="271.5" >do_syscall_64</text>
</g>
<g >
<title>perf-exec (15,138 samples, 0.05%)</title><rect x="10.0" y="325" width="0.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>test (31,108,873 samples, 99.95%)</title><rect x="10.6" y="325" width="1179.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="13.57" y="335.5" >test</text>
</g>
<g >
<title>[unknown] (14,278,057 samples, 45.87%)</title><rect x="10.6" y="309" width="541.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.57" y="319.5" >[unknown]</text>
</g>
<g >
<title>load_elf_interp.constprop.0 (1,148,809 samples, 3.69%)</title><rect x="502.0" y="149" width="43.6" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="505.00" y="159.5" >load..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (617,327 samples, 1.98%)</title><rect x="843.7" y="261" width="23.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="846.67" y="271.5" >s..</text>
</g>
<g >
<title>free_pages (1,971,152 samples, 6.33%)</title><rect x="760.8" y="197" width="74.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="763.77" y="207.5" >free_pages</text>
</g>
<g >
<title>___pmd_free_tlb (1,854,887 samples, 5.96%)</title><rect x="867.1" y="101" width="70.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="870.07" y="111.5" >___pmd_..</text>
</g>
<g >
<title>generic_write_end (1,609,136 samples, 5.17%)</title><rect x="383.1" y="133" width="61.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="386.07" y="143.5" >generi..</text>
</g>
<g >
<title>vfs_write (6,696,424 samples, 21.52%)</title><rect x="190.2" y="213" width="253.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="193.19" y="223.5" >vfs_write</text>
</g>
<g >
<title>getenv (1,952,474 samples, 6.27%)</title><rect x="999.6" y="309" width="74.0" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1002.62" y="319.5" >getenv</text>
</g>
<g >
<title>native_write_msr (15,138 samples, 0.05%)</title><rect x="10.0" y="37" width="0.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.00" y="47.5" ></text>
</g>
<g >
<title>search_binary_handler (1,316,123 samples, 4.23%)</title><rect x="502.0" y="181" width="49.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="505.00" y="191.5" >searc..</text>
</g>
<g >
<title>copy_process (2,658,204 samples, 8.54%)</title><rect x="551.9" y="213" width="100.8" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="554.90" y="223.5" >copy_process</text>
</g>
<g >
<title>ext4_file_write_iter (1,609,136 samples, 5.17%)</title><rect x="383.1" y="197" width="61.0" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="386.07" y="207.5" >ext4_f..</text>
</g>
<g >
<title>ext4_add_entry (1,517,640 samples, 4.88%)</title><rect x="132.7" y="117" width="57.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="135.66" y="127.5" >ext4_a..</text>
</g>
<g >
<title>perf_ctx_enable (215,339 samples, 0.69%)</title><rect x="835.5" y="213" width="8.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="838.50" y="223.5" ></text>
</g>
<g >
<title>__kmalloc (1,613,966 samples, 5.19%)</title><rect x="321.9" y="117" width="61.2" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="324.88" y="127.5" >__kmal..</text>
</g>
<g >
<title>__mmput (3,496,215 samples, 11.23%)</title><rect x="867.1" y="197" width="132.5" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="870.07" y="207.5" >__mmput</text>
</g>
<g >
<title>free_pgd_range (1,854,887 samples, 5.96%)</title><rect x="867.1" y="149" width="70.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="870.07" y="159.5" >free_pg..</text>
</g>
<g >
<title>timer_create@@GLIBC_2.34 (1,488,634 samples, 4.78%)</title><rect x="1133.6" y="309" width="56.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1136.56" y="319.5" >timer..</text>
</g>
<g >
<title>__mark_inode_dirty (1,609,136 samples, 5.17%)</title><rect x="383.1" y="117" width="61.0" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="386.07" y="127.5" >__mark..</text>
</g>
<g >
<title>__mempcpy_avx_unaligned_erms (1,527,821 samples, 4.91%)</title><rect x="444.1" y="293" width="57.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="447.07" y="303.5" >__memp..</text>
</g>
<g >
<title>lock_vma_under_rcu (1,580,339 samples, 5.08%)</title><rect x="1073.6" y="197" width="60.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1076.65" y="207.5" >lock_v..</text>
</g>
<g >
<title>exit_to_user_mode_loop (617,327 samples, 1.98%)</title><rect x="843.7" y="229" width="23.4" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="846.67" y="239.5" >e..</text>
</g>
<g >
<title>mas_wr_bnode (1,395,480 samples, 4.48%)</title><rect x="599.8" y="117" width="52.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="602.77" y="127.5" >mas_w..</text>
</g>
<g >
<title>test_feed_forward_fn (1,580,339 samples, 5.08%)</title><rect x="1073.6" y="293" width="60.0" height="15.0" fill="rgb(209,18,4)" rx="2" ry="2" />
<text  x="1076.65" y="303.5" >test_f..</text>
</g>
<g >
<title>do_user_addr_fault (1,371,872 samples, 4.41%)</title><rect x="695.1" y="213" width="52.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="698.12" y="223.5" >do_us..</text>
</g>
<g >
<title>enqueue_task (1,119,555 samples, 3.60%)</title><rect x="652.7" y="197" width="42.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="655.68" y="207.5" >enq..</text>
</g>
<g >
<title>path_openat (3,172,964 samples, 10.19%)</title><rect x="69.9" y="197" width="120.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="72.90" y="207.5" >path_openat</text>
</g>
<g >
<title>exec_binprm (15,138 samples, 0.05%)</title><rect x="10.0" y="197" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (1,316,123 samples, 4.23%)</title><rect x="502.0" y="245" width="49.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="505.00" y="255.5" >do_ex..</text>
</g>
<g >
<title>perf_event_enable_on_exec (15,138 samples, 0.05%)</title><rect x="10.0" y="117" width="0.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>begin_new_exec (15,138 samples, 0.05%)</title><rect x="10.0" y="149" width="0.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>do_wp_page (669,829 samples, 2.15%)</title><rect x="708.3" y="149" width="25.4" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="711.33" y="159.5" >d..</text>
</g>
<g >
<title>bprm_execve (15,138 samples, 0.05%)</title><rect x="10.0" y="229" width="0.6" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>ext4_do_update_inode.isra.0 (1,609,136 samples, 5.17%)</title><rect x="383.1" y="53" width="61.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="386.07" y="63.5" >ext4_d..</text>
</g>
<g >
<title>do_syscall_64 (1,316,123 samples, 4.23%)</title><rect x="502.0" y="277" width="49.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="505.00" y="287.5" >do_sy..</text>
</g>
<g >
<title>ext4_buffered_write_iter (1,609,136 samples, 5.17%)</title><rect x="383.1" y="181" width="61.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="386.07" y="191.5" >ext4_b..</text>
</g>
<g >
<title>exc_page_fault (1,371,872 samples, 4.41%)</title><rect x="695.1" y="229" width="52.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="698.12" y="239.5" >exc_p..</text>
</g>
<g >
<title>lookup_open.isra.0 (1,517,640 samples, 4.88%)</title><rect x="132.7" y="165" width="57.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="135.66" y="175.5" >lookup..</text>
</g>
<g >
<title>__mod_memcg_lruvec_state (355,026 samples, 1.14%)</title><rect x="720.3" y="69" width="13.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="723.27" y="79.5" ></text>
</g>
<g >
<title>_Fork (8,313,154 samples, 26.71%)</title><rect x="551.9" y="309" width="315.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="554.90" y="319.5" >_Fork</text>
</g>
<g >
<title>do_mmap (1,148,809 samples, 3.69%)</title><rect x="502.0" y="85" width="43.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="505.00" y="95.5" >do_m..</text>
</g>
<g >
<title>ext4_add_nondir (1,517,640 samples, 4.88%)</title><rect x="132.7" y="133" width="57.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="135.66" y="143.5" >ext4_a..</text>
</g>
<g >
<title>kernel_clone (3,777,759 samples, 12.14%)</title><rect x="551.9" y="229" width="143.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="554.90" y="239.5" >kernel_clone</text>
</g>
<g >
<title>__x64_sys_openat (3,172,964 samples, 10.19%)</title><rect x="69.9" y="245" width="120.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="72.90" y="255.5" >__x64_sys_openat</text>
</g>
<g >
<title>free_unref_page (1,971,152 samples, 6.33%)</title><rect x="760.8" y="165" width="74.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="763.77" y="175.5" >free_unr..</text>
</g>
<g >
<title>mas_split.isra.0 (1,395,480 samples, 4.48%)</title><rect x="599.8" y="101" width="52.9" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="602.77" y="111.5" >mas_s..</text>
</g>
<g >
<title>folio_add_new_anon_rmap (355,026 samples, 1.14%)</title><rect x="720.3" y="117" width="13.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="723.27" y="127.5" ></text>
</g>
<g >
<title>__GI___libc_write (6,696,424 samples, 21.52%)</title><rect x="190.2" y="293" width="253.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="193.19" y="303.5" >__GI___libc_write</text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (2,658,204 samples, 8.54%)</title><rect x="551.9" y="149" width="100.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="554.90" y="159.5" >mas_wr_store..</text>
</g>
<g >
<title>asm_exc_page_fault (617,327 samples, 1.98%)</title><rect x="843.7" y="197" width="23.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="846.67" y="207.5" >a..</text>
</g>
<g >
<title>__x64_sys_clone (3,777,759 samples, 12.14%)</title><rect x="551.9" y="261" width="143.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="554.90" y="271.5" >__x64_sys_clone</text>
</g>
<g >
<title>__mod_lruvec_page_state (1,854,887 samples, 5.96%)</title><rect x="867.1" y="69" width="70.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="870.07" y="79.5" >__mod_l..</text>
</g>
<g >
<title>pgd_free (1,971,152 samples, 6.33%)</title><rect x="760.8" y="213" width="74.7" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="763.77" y="223.5" >pgd_free</text>
</g>
<g >
<title>asm_exc_page_fault (1,580,339 samples, 5.08%)</title><rect x="1073.6" y="245" width="60.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1076.65" y="255.5" >asm_ex..</text>
</g>
<g >
<title>exit_mmap (3,496,215 samples, 11.23%)</title><rect x="867.1" y="181" width="132.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="870.07" y="191.5" >exit_mmap</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,496,215 samples, 11.23%)</title><rect x="867.1" y="309" width="132.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="870.07" y="319.5" >entry_SYSCALL_64..</text>
</g>
<g >
<title>_dl_lookup_symbol_x (1,564,725 samples, 5.03%)</title><rect x="10.6" y="277" width="59.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="13.57" y="287.5" >_dl_lo..</text>
</g>
<g >
<title>exc_page_fault (1,580,339 samples, 5.08%)</title><rect x="1073.6" y="229" width="60.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1076.65" y="239.5" >exc_pa..</text>
</g>
<g >
<title>mem_cgroup_from_task (353,524 samples, 1.14%)</title><rect x="733.7" y="197" width="13.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="736.73" y="207.5" ></text>
</g>
<g >
<title>open_last_lookups (1,517,640 samples, 4.88%)</title><rect x="132.7" y="181" width="57.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="135.66" y="191.5" >open_l..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,172,964 samples, 10.19%)</title><rect x="69.9" y="277" width="120.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="72.90" y="287.5" >entry_SYSCALL_..</text>
</g>
<g >
<title>do_timer_create (1,488,634 samples, 4.78%)</title><rect x="1133.6" y="245" width="56.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1136.56" y="255.5" >do_ti..</text>
</g>
<g >
<title>do_filp_open (3,172,964 samples, 10.19%)</title><rect x="69.9" y="213" width="120.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="72.90" y="223.5" >do_filp_open</text>
</g>
<g >
<title>__x64_sys_timer_create (1,488,634 samples, 4.78%)</title><rect x="1133.6" y="261" width="56.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1136.56" y="271.5" >__x64..</text>
</g>
<g >
<title>dup_mmap (2,658,204 samples, 8.54%)</title><rect x="551.9" y="181" width="100.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="554.90" y="191.5" >dup_mmap</text>
</g>
<g >
<title>__handle_mm_fault (1,018,348 samples, 3.27%)</title><rect x="695.1" y="181" width="38.6" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="698.12" y="191.5" >__h..</text>
</g>
</g>
</svg>
